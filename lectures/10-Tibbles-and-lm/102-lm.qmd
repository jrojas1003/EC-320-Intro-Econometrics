---
name: regressions using lm()
---

```{r setup, include=FALSE}
library(pacman)
p_load(tidyverse, dplyr)
```


## lm()

Now we will use the function `lm()` to estimate a linear model

`lm()` takes 2 important arguments:

1. A [formula]{.hi} created using the tilde symbol `~`
2. Data (a tibble)

`lm()` outputs an `lm` object:

- A bunch of information about the regression it just ran

---

## [Ex]{.ex} Simple Regression

We create the following dataset and [pipe]{.hi} it into the `lm()` to run the regression

```{r}
tibble(
    x = 1:3,
    y = c(4, 2, 1)
) %>%
    lm(y ~ x, data = .)
```

Note that we get our standard regression coefficients $\hat{\beta}_{0}$ and $\hat{\beta}_{1}$

::: {.fragment}
We can also unpack the `lm` object in lots of different ways. 
:::

---

## [Ex]{.ex} Simple Regression {.small}

Let's get the residuals using the `residuals()` function

```{r}
tibble(
    x = 1:3,
    y = c(4, 2, 1)
) %>% 
    lm(y ~ x, data = .) %>%
    residuals()
```

<br>

We can also get the fitted values using `fitted.values()`

```{r}
tibble(
    x = 1:3,
    y = c(4, 2, 1)
) %>%
    lm(y ~ x, data = .) %>%
    fitted.values()
```