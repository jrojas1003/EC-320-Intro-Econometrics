# Install the 'here' package if it is not already installed
if (!requireNamespace("here", quietly = TRUE)) {
install.packages("here")
}
# Load packages
library(here)
library(tidyverse)
library(tidyverse)
library(broom)
# Define the path to the data file using the 'here' package
ipums_tbl = here("data", "ipums_2022.csv") %>%
readr::read_csv()
View(ipums_tbl)
View(ipums_tbl)
# Write your code here
model <- ipums_tbl %>%
lm(log(INCTOT) ~ school, data = .)
library(readr)
ipums_2022 <- read_csv("data/ipums_2022.csv")
View(ipums_2022)
ipums_2022%>%filter(i_economics == 1, i_unemployed == 1)
library(tidyverse)
library(broom)
ipums_2022%>%filter(i_economics == 1, i_unemployed == 1)
ipums_2022 %>%
filter(i_bachelors == 1 | i_hsdiploma == 1) %>%
mutate(edu_level = if_else(i_bachelors == 1, "Bachelors", "HS Diploma")) %>%
group_by(edu_level) %>%
summarise(unemployment_rate = mean(i_unemployed, na.rm = TRUE))
ipums_2022 %>%
pivot_longer(cols = starts_with("i_economics"), names_to = "major", values_to = "has_degree")
ggplot(ipums_2022, aes(x = INCTOT)) +
geom_histogram(bins = 100) +
labs(title = "Distribution of Income", x = "Income (INCTOT)", y = "Count")
ggplot(ipums_2022, aes(x = school, y = INCTOT)) +
geom_hex(bins = 30) +
labs(title = "Income vs Years of Schooling", x = "Years of Schooling", y = "Income")
ipums_tbl <- ipums_2022
ipums_tbl %>%
filter(i_economics == 1, i_unemployed == 1) %>%
nrow()
# ipums_tbl %>%
#   filter(i_economics != 1, i_hsdiploma != 1,
#          i_ged != 1, i_unemployed == 1) %>%
#   nrow()
ipums_tbl %>%
summarize(
business_total = sum(i_business == 1),
business_unemploy = sum(i_business == 1 & i_unemployed == 1),
business_rate = (business_unemploy/business_total),
education_total = sum(i_education == 1),
education_unemploy = sum(i_education ==1 & i_unemployed ==1),
education_rate = (education_unemploy/education_total),
economics_total = sum(i_economics == 1),
economics_unemploy = sum(i_economics == 1 & i_unemployed == 1),
economics_rate = (economics_unemploy/economics_total)
)
ipums_tbl %>%
summarize(
bach_tot = sum(i_bachelors == 1),
bach_unemploy = sum(i_bachelors == 1 & i_unemployed == 1),
bach_rate = (bach_unemploy/bach_tot),
hs_tot = sum(i_hsdiploma == 1),
hs_unemploy = sum(i_hsdiploma == 1 & i_unemployed == 1),
hs_rate = (hs_unemploy/hs_tot)
)
ggplot(data = ipums_tbl, aes(x = INCTOT)) +
geom_histogram() +
labs(x = "Yearly Income", y = "Number of people", title = "Yearly Income of US Population Sample")
ggplot(data = ipums_tbl, aes(x = INCTOT, y = school)) +
geom_hex()
income_logged <- ipums_tbl %>%
filter(INCTOT > 0)
model <- lm(log(INCTOT) ~ school, data = income_logged) %>%
summary(model)
model <- lm(log(INCTOT) ~ school, data = income_logged)
summary(model)
broom::tidy(model)
model <- lm(log(INCTOT) ~ school, data = income_logged)
summary(model)
broom::tidy(model)
rm(model)
rm(income_logged)
ipums_tbl %>%
filter(i_economics == 1, i_unemployed == 1) %>%
nrow()
econ_unemp_rate <- ipums_tbl %>%
filter(i_economics == 1) %>%
summarize(rate = mean(i_unemployed)) %>%
pull(rate)
other_unemp_rate <- ipums_tbl %>%
filter(i_economics == 0) %>%
summarize(rate = mean(i_unemployed)) %>%
pull(rate)
ipums_tbl %>%
ggplot(aes(x = INCTOT)) +
geom_histogram(bins = 60) +
labs(
title = "Distribution of Personal Income",
x = "Income (2022 / $)",
y = "# of People")
ipums_tbl %>%
mutate(log_income = log(INCTOT)) %>%
ggplot(data = ., aes(x = log_income)) +  # âœ… '.' passes the piped-in data
geom_histogram(fill = "red") +
labs(
title = "Distribution of Log Personal Income",
x = "Log Income (2022 / $)",
y = "# of People")
ggplot(ipums_tbl, aes(x = school, y = INCTOT)) +
geom_jitter(alpha = 0.4, color = "blue", width = 0.3, height = 0) +
labs(
title = "Income vs. Education",
x = "Education Level",
y = "Personal Income (2022 / $)")
ipums_tbl <- ipums_tbl %>%
mutate(residuals = resid(model))
ipums_tbl <- ipums_tbl %>%
mutate(log_income = ifelse(INCTOT > 0, log(INCTOT), NA))
model <- lm(log_income ~ school, data = ipums_tbl)
ipums_tbl <- ipums_tbl %>%
mutate(residuals = resid(model))
ipums_tbl %>%
select(i_unemployed, i_economics, i_business, i_engineering, i_education, i_medicine, i_socialsci) %>%
pivot_longer(
cols = starts_with("i_"),
names_to = "major",
values_to = "has_degree"
) %>%
filter(has_degree == 1) %>%
group_by(major) %>%
summarise(
unemployment_rate = mean(i_unemployed, na.rm = TRUE)
) %>%
arrange(desc(unemployment_rate))
ipums_tbl %>%
mutate(
degree_group = case_when(
i_bachelors == 1 & i_masters == 0 & i_doctorate == 0 ~ "Bachelors Only",
i_hsdiploma == 1 & i_associates == 0 & i_bachelors == 0 & i_masters == 0 & i_doctorate == 0 ~ "HS Diploma Only",
TRUE ~ NA_character_
)
) %>%
filter(!is.na(degree_group)) %>%
group_by(degree_group) %>%
summarise(
unemployment_rate = mean(i_unemployed, na.rm = TRUE),
count = n()
)
ipums_tbl %>%
ggplot(aes(x = INCTOT)) +
geom_histogram(binwidth = 10000, fill = "steelblue", color = "white") +
labs(
title = "Distribution of Personal Income (INCTOT)",
x = "Personal Income (USD, 2022 dollars)",
y = "Number of Individuals"
) +
theme_minimal()
model <- lm(log_income ~ school, data = ipums_tbl)
ipums_tbl %>%
mutate(residuals = resid(model)) %>%
ggplot(aes(x = school, y = residuals)) +
geom_point(alpha = 0.3) +
geom_smooth(se = FALSE, color = "red") +
labs(
title = "Residuals vs. Education",
x = "Years of Education",
y = "Residuals"
) +
theme_minimal()
ipums_tbl %>%
lm(log_income ~ school + AGE + i_economics, data = .) %>%
tidy()
ipums_2022 %>%
filter(i_economics ==1,i_unemployed==1) %>%
summarise(i_unemployed_econ=n())
clean_income<-ipums_2022 %>%
filter(!is.na(INCTOT),INCTOT>0) %>%
pull(INCTOT)
hist(clean_income,
breaks = 50,
main = "Personal Income (INCTOT)",
xlab = "Personal Pre-Tax Income (2022 dollars)",
ylab = "Number of Individuals")
econ_unemployment_count <- ipums_2022 %>%
+ filter(i_unemployed==1, i_economics==1) %>%
+ nrow()
ipums_clean <- ipums_2022 %>%
filter(INCTOT>0) %>%
mutate(log_income = log(INCTOT))
model <- lm(log_income ~ school, data = ipums_clean) %>%
broom::tiddy
model <- lm(log_income ~ school, data = ipums_clean) %>%
broom::tidy()
summary(model)
lm(log_income ~ school, data = ipums_clean) %>%
broom::tidy()
summary(model)
